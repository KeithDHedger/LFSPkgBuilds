#!/bin/bash

#
# Â©K. D. Hedger. Mon 12 Jun 15:48:46 BST 2017 kdhedger68713@gmail.com
#
# This file (LFSSetUp) is part of LFSPkgBuilds.
#
# BootCD is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# at your option) any later version.

# BootCD is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with BootCD.  If not, see <http://www.gnu.org/licenses/>.
#

#$1=varname $2=message
readWithDefault ()
{
	local varname="$1"
	local varcontents="${!varname}"
	local message="$2"

	read -e -p "$message [ ${varcontents} ] "
	if [ "X$REPLY" != "X" ];then
		eval "${varname}=$REPLY"
	fi
}

case $PIBUILD in
	1)
		LIBDIRSUFFIX=""
		PIKERNELVERSION=4.19.y
		PIVERS=${PIVERS:-4}
		;;
	*)
		case $(uname -m) in
			"x86_64")
				LIBDIRSUFFIX="64"
				;;
			*)
				LIBDIRSUFFIX=""
				;;
		esac
esac

#set variables if possible
if [ -f ./SystemData.local ];then
	. ./SystemData.local
fi

#set default language
LANG=${LANG:-"en_GB"}

#Mount point for your new LFS system
LFS=${LFS:-"/mnt/LFS"}
readWithDefault "LFS"  "Enter Mountpoint For LFS"

#partion for boot files on pi
if [ $PIBUILD -eq 1 ];then
	readWithDefault "PIBOOTDEV"  "Enter BOOT Partition For Pi"
	readWithDefault "PIROOTDEV"  "Enter ROOT Partition For Pi"
	readWithDefault "PIVERS"  "Enter Pi Model"
fi

#LFS Version
LFSVERSION=${LFSVERSION:-9.0}
readWithDefault "LFSVERSION"  "Enter LFS Version"

#Computer name
LFSNAME=${LFSNAME:-"LFS"}
readWithDefault "LFSNAME"  "Enter Hostname"

#LFS init type eithe bbinit or sysvinit
if [ $PIBUILD -eq 1 ];then
	INITTYPE=${INITTYPE:-"pi-sysvinit"}
	readWithDefault "INITTYPE"  "Enter Init Type (LFSInit|bbinit|pi-sysvinit)"
else
	INITTYPE=${INITTYPE:-"sysvinit"}
	readWithDefault "INITTYPE"  "Enter Init Type (LFSInit|bbinit|sysvinit)"
fi

#libdir suffix
readWithDefault "LIBDIRSUFFIX"  "Enter Suffix For Lib Folders"

#buildscripts location
BUILDSCRIPTS="/LFSPkgBuildScripts/"
readWithDefault "BUILDSCRIPTS"  "Enter Folder For Build Scripts"

#Place to store built packages, defaults to /LFSBuiltPackages/${LFSVERSION}
BUILTPACKAGES=${BUILTPACKAGES:-"/LFSBuiltPackages/${LFSVERSION}"}
readWithDefault "BUILTPACKAGES"  "Enter Folder For Built Packages"

#Place to store downloaded source archives, defaults to /LFSSourceArchives/${LFSVERSION}
SOURCEARCHIVES=${SOURCEARCHIVES:-"/LFSSourceArchives/${LFSVERSION}"}
readWithDefault "SOURCEARCHIVES"  "Enter Folder For Source Archives"

#if non empty mount the builtpackages and source folders from external disk
EXTFOLDER="${EXTFOLDER:-""}"
readWithDefault "EXTFOLDER"  "Bind Built Packages And Source Folders To Folder"

#compile here
COMPILEAT="${COMPILEAT:-"$SOURCEARCHIVES"}"
readWithDefault "COMPILEAT"  "Compile In This Folder"

#kernal version
#if the kernel version you want to use is not the same as the book you will have to manually download the source to $SOURCEARCHIVES
#pi or normal
if [[ $PIBUILD -eq 1 ]];then
	KERNELVERSION=$PIKERNELVERSION
else
	KV=$(curl -q http://www.linuxfromscratch.org/lfs/view/$LFSVERSION/longindex.html 2>/dev/null|sed -n 's|<strong class="item">lfskernel-\(.*\):</strong> <span class=|\1|p'|sed -n 's|[[:space:]]||pg')
	KERNELVERSION=${KERNELVERSION:-$KV}
	readWithDefault "KERNELVERSION"  "Enter Kernel Version"
fi

#keyboard
#set keyboad lang for auto detect use
#KEYBOARD="$(setxkbmap -print | awk -F'+' '/xkb_symbols/ {print $2}')"
KEYBOARD=${KEYBOARD:-"uk"}
read -e -p "Enter Keyboard " -i "[ $KEYBOARD ] "

#File system type, probably ext2 or ext4
ROOTFSTYPE=${ROOTFSTYPE:-$(findmnt -no FSTYPE $LFS)}
readWithDefault "ROOTFSTYPE"  "Enter Root FS Type"

#Variable below this line are computed and probably don't need changing, but feel free.
#computed stuff

ROOTDEV=$(findmnt -no SOURCE $LFS)
readWithDefault "ROOTDEV"  "Enter Root Device"

SWAP=$(blkid|grep swap|tail -n1|awk -F: '{print $1}')
readWithDefault "SWAP"  "Enter Swap Device Or Path To Swapfile"

LANGUAGE=${LANGUAGE:-$LANG}
readWithDefault "LANGUAGE"  "Enter Language"

#network
IP=${IP:-"192.168.1.1"$(echo $ROOTDEV|sed 's/^[a-zA-Z\/]*//')}
readWithDefault "IP"  "Enter IP"

#Set up the network
GATEWAY=${GATEWAY:-"192.168.1.254"}
readWithDefault "GATEWAY"  "Enter Gateway IP"

SUBNET=${SUBNET:-"255.255.255.0"}
readWithDefault "SUBNET"  "Enter Subnet IP"

NAMESERVERS=${NAMESERVERS:-"208.67.222.222 208.67.220.220 8.8.8.8 $GATEWAY"}
readWithDefault "NAMESERVERS"  "Enter Name Servers IP List"

echo "----SUMMARY----"
echo 
echo "LFS=$LFS"
echo "PIBUILD=$PIBUILD"
if [ $PIBUILD -eq 1 ];then
	echo "PIVERS=$PIVERS"
	echo "PIBOOTDEV=$PIBOOTDEV"
	echo "PIROOTDEV=$PIROOTDEV"
fi
echo "LFSVERSION=$LFSVERSION"
echo "LFSNAME=$LFSNAME"
echo "INITTYPE=$INITTYPE"

echo "LIBDIRSUFFIX=$LIBDIRSUFFIX"
echo "BUILDSCRIPTS=$BUILDSCRIPTS"
echo "BUILTPACKAGES=$BUILTPACKAGES"
echo "SOURCEARCHIVES=$SOURCEARCHIVES"
echo "EXTFOLDER=$EXTFOLDER"
echo "COMPILEAT=$COMPILEAT"
echo "KERNELVERSION=$KERNELVERSION"
echo "KEYBOARD=$KEYBOARD"
echo "ROOTFSTYPE=$ROOTFSTYPE"
echo "ROOTDEV=$ROOTDEV"
echo "SWAP=$SWAP"

echo "LANGUAGE=$LANGUAGE"

echo "IP=$IP"
echo "GATEWAY=$GATEWAY"
echo "SUBNET=$SUBNET"
echo "NAMESERVERS=\"$NAMESERVERS\""
echo "--------"

SUMMARY="n"
readWithDefault "SUMMARY"  "Write Config Files And Copy Data Etc"

if [ $SUMMARY = "n" ];then
	exit 1
fi

#set kernel version in build scripts
#build scripts should be at $LFS/LFSPkgBuildScripts
#sed -ri 's/^VERSION="[0-9]+.[0-9]+.[0-9]+"/VERSION="'"${KERNELVERSION}"'"/' ${LFS}/${BUILDSCRIPTS}/system/linuxheaders/linuxheaders.LFSBuild
#sed -ri "s/linuxheaders-[0-9]+.[0-9]+.[0-9]+/linuxheaders-${KERNELVERSION}/i" ${LFS}/${BUILDSCRIPTS}/system/system-meta/system-${INITTYPE}-meta.LFSBuild
ln -svf system-${INITTYPE}-meta.LFSBuild ${LFS}/${BUILDSCRIPTS}/system/system-meta/system-meta.LFSBuild
if [ $PIBUILD -eq 1 ];then
	sed -ri 's#PIBOOTDEV=.*#PIBOOTDEV="'$PIBOOTDEV'"#' ${LFS}/${BUILDSCRIPTS}/system/system-meta/system-${INITTYPE}-meta.LFSBuild
	sed -ri 's#PIROOTDEV=.*#PIROOTDEV="'$PIROOTDEV'"#' ${LFS}/${BUILDSCRIPTS}/system/system-meta/system-${INITTYPE}-meta.LFSBuild
	sed -ri 's#ROOTFSTYPE=.*#ROOTFSTYPE="'$ROOTFSTYPE'"#' ${LFS}/${BUILDSCRIPTS}/system/system-meta/system-${INITTYPE}-meta.LFSBuild
else
	sed -ri 's/^VERSION="[0-9]+.[0-9]+.[0-9]+"/VERSION="'"${KERNELVERSION}"'"/' ${LFS}/${BUILDSCRIPTS}/kernel/kernel.LFSBuild
	sed -ri 's/^VERSION="[0-9]+.[0-9]+.[0-9]+"/VERSION="'"${KERNELVERSION}"'"/' ${LFS}/${BUILDSCRIPTS}/kernel/firmware.LFSBuild
fi

cat > $LFS/LFSScripts/SystemData.local << EOF

LFS=$LFS
PIBUILD=$PIBUILD
PIVERS=$PIVERS
PIBOOTDEV=$PIBOOTDEV
PIROOTDEV=$PIROOTDEV
LFSNAME=$LFSNAME
LFSVERSION=$LFSVERSION
KERNELVERSION=$KERNELVERSION
INITTYPE=$INITTYPE

LIBDIRSUFFIX=$LIBDIRSUFFIX
BUILTPACKAGES=$BUILTPACKAGES
SOURCEARCHIVES=$SOURCEARCHIVES
EXTFOLDER=$EXTFOLDER
COMPILEAT=\${COMPILEAT:-$COMPILEAT}
BUILDSCRIPTS=$BUILDSCRIPTS

KEYBOARD=$KEYBOARD
ROOTFSTYPE=$ROOTFSTYPE
ROOTDEV=\$(findmnt -no SOURCE \$LFS)
SWAP=$SWAP

LANGUAGE=$LANGUAGE

IP=$IP
GATEWAY=$GATEWAY
SUBNET=$SUBNET
NAMESERVERS="$NAMESERVERS"
EOF

sudo mkdir -vp $LFS/etc||true
cat > /tmp/lfspkg.rc << EOF
LFSVERSION=$LFSVERSION
OUTPUT=$BUILTPACKAGES
SOURCEARCHIVES=$SOURCEARCHIVES
BUILDSCRIPTS=$BUILDSCRIPTS
COMPILEAT=\${COMPILEAT:-$COMPILEAT}
EOF
sudo mv /tmp/lfspkg.rc $LFS/etc/

