#!/bin/bash -e

#Â©keithhedger Sun  1 Feb 14:56:11 GMT 2015
#kdhedger68713@gmail.com
#Version 8.0

if [ -e ./SystemData ];then
	. ./SystemData
else
	echo "No SystemData file found ..."
	exit 0
fi

read -sp "Enter admin password :" ADMINPWD
echo

SYSTEMSOURCE="${LFS}${SOURCEARCHIVES}/SYSTEM"
NETSOURCE="${LFS}${SOURCEARCHIVES}/NET"
echo $ADMINPWD|sudo -S mkdir -vp "$SYSTEMSOURCE" "$NETSOURCE"|| true
echo $ADMINPWD|sudo -S mkdir -vp "$LFS/tools" "${SYSTEMSOURCE}"|| true
echo $ADMINPWD|sudo -S rm /tools  2>/dev/null||true
echo $ADMINPWD|sudo -S ln -sv $LFS/tools /  2>/dev/null|| true
echo $ADMINPWD|sudo -S chown -R $USER:$USER $LFS/tools/  "${SYSTEMSOURCE}" "$NETSOURCE" 2>/dev/null
echo $ADMINPWD|sudo -S chmod -R 777 $LFS/tools/ 2>/dev/null

cp ./SystemData $SYSTEMSOURCE

WGETTAR="http://ftp.gnu.org/gnu/wget/wget-1.19.1.tar.xz"
OPENSSLTAR=https://openssl.org/source/openssl-1.0.2k.tar.gz

set +h
umask 022
LC_ALL=POSIX
LFS_TGT=$(uname -m)-lfs-linux-gnu
PATH=/tools/bin:/bin:/usr/bin
export LFS LC_ALL LFS_TGT PATH
export MAKEFLAGS='-j4'

if [ ! -e "${SYSTEMSOURCE}/gotsystem" ];then
	wget http://www.linuxfromscratch.org/lfs/view/$LFSVERSION/wget-list
	wget http://www.linuxfromscratch.org/lfs/view/$LFSVERSION/md5sums
	mv md5sums $SYSTEMSOURCE
	wget -i wget-list -c -P $SYSTEMSOURCE||true

#wget/openssl from the blfs book I prefer to make this as part of the main system
	wget -c "$WGETTAR" -P $NETSOURCE
	wget -c "$OPENSSLTAR" -P $NETSOURCE
fi

cd "$SYSTEMSOURCE"
if ! md5sum -c md5sums;then
	echo "Files don't match ..."
	exit 1
else
	echo "All files check ..."
	touch "${SYSTEMSOURCE}/gotsystem"
fi

NAME=binutils
VERSION=2.27
tar -xvf ${NAME}-${VERSION}.tar.bz2
pushd ${NAME}-${VERSION}
	mkdir -v build
	cd build
	../configure --prefix=/tools --with-sysroot=$LFS --with-lib-path=/tools/lib --target=$LFS_TGT --disable-nls --disable-werror
	make || exit 0
	case $(uname -m) in
  		x86_64) mkdir -v /tools/lib && ln -sv lib /tools/lib64 ;;
	esac
	make $MAKEFLAGS||make
	make install
popd
rm -rf ${NAME}-${VERSION}

#pass 1
NAME=gcc
VERSION=6.3.0
tar -xvf ${NAME}-${VERSION}.tar.bz2
pushd ${NAME}-${VERSION}
	tar -xf ../mpfr-3.1.5.tar.xz
	mv -v mpfr-3.1.5 mpfr
	tar -xf ../gmp-6.1.2.tar.xz
	mv -v gmp-6.1.2 gmp
	tar -xf ../mpc-1.0.3.tar.gz
	mv -v mpc-1.0.3 mpc

	for file in gcc/config/{linux,i386/linux{,64}}.h
		do
			cp -uv $file{,.orig}
			sed -e 's@/lib\(64\)\?\(32\)\?/ld@/tools&@g' -e 's@/usr@/tools@g' $file.orig > $file
			echo '
#undef STANDARD_STARTFILE_PREFIX_1
#undef STANDARD_STARTFILE_PREFIX_2
#define STANDARD_STARTFILE_PREFIX_1 "/tools/lib/"
#define STANDARD_STARTFILE_PREFIX_2 ""' >> $file
			touch $file.orig
		done

	rm -r build||true
	mkdir -v build
	cd build
	../configure --target=$LFS_TGT --prefix=/tools --with-glibc-version=2.11 --with-sysroot=$LFS --with-newlib --without-headers --with-local-prefix=/tools --with-native-system-header-dir=/tools/include  --disable-nls --disable-shared --disable-multilib --disable-decimal-float --disable-threads --disable-libatomic --disable-libgomp --disable-libmpx --disable-libquadmath --disable-libssp --disable-libvtv --disable-libstdcxx --enable-languages=c,c++
#	../configure --target=$LFS_TGT --prefix=/tools --with-glibc-version=2.11 --with-sysroot=$LFS --with-newlib --without-headers --with-local-prefix=/tools --with-native-system-header-dir=/tools/include --disable-nls --disable-shared --disable-multilib --disable-decimal-float --disable-threads --disable-libatomic --disable-libgomp --disable-libmpx --disable-libquadmath --disable-libssp --disable-libvtv --disable-libstdcxx --enable-languages=c,c++
	make $MAKEFLAGS||make
	make install
popd
rm -rf ${NAME}-${VERSION}

NAME=linux
VERSION=$KERNELVERSION
tar -xvf ${NAME}-${VERSION}.tar.xz
pushd ${NAME}-${VERSION}
	make mrproper
	make INSTALL_HDR_PATH=dest headers_install
	cp -rv dest/include/* /tools/include
popd
rm -rf ${NAME}-${VERSION}

NAME=glibc
VERSION=2.25
tar -xvf ${NAME}-${VERSION}.tar.xz
pushd ${NAME}-${VERSION}
	mkdir -v build
	cd build

#	../configure --prefix=/tools --host=$LFS_TGT --build=$(../scripts/config.guess) --enable-kernel=2.6.32 --with-headers=/tools/include libc_cv_forced_unwind=yes  libc_cv_c_cleanup=yes
	../configure --prefix=/tools --host=$LFS_TGT --build=$(../scripts/config.guess) --enable-kernel=2.6.32 --with-headers=/tools/include libc_cv_forced_unwind=yes libc_cv_c_cleanup=yes
	make $MAKEFLAGS||make
	make install
popd
rm -rf ${NAME}-${VERSION} glibc-build

echo 'int main(){}' > dummy.c
$LFS_TGT-gcc dummy.c
readelf -l a.out | grep ': /tools'

read -t 30 -p "check out " ||true
rm -v dummy.c a.out

#libstdc++
NAME=gcc
VERSION=6.3.0
tar -xvf ${NAME}-${VERSION}.tar.bz2
pushd ${NAME}-${VERSION}
	mkdir -pv build
	cd build
#	../libstdc++-v3/configure --host=$LFS_TGT --prefix=/tools --disable-multilib --disable-nls --disable-libstdcxx-threads --disable-libstdcxx-pch --with-gxx-include-dir=/tools/$LFS_TGT/include/c++/${VERSION}
	../libstdc++-v3/configure --host=$LFS_TGT --prefix=/tools --disable-multilib --disable-nls --disable-libstdcxx-threads --disable-libstdcxx-pch --with-gxx-include-dir=/tools/$LFS_TGT/include/c++/${VERSION}
	make $MAKEFLAGS||make
	make install
popd
rm -rf ${NAME}-${VERSION}

#pass 2
NAME=binutils
VERSION=2.27
tar -xvf ${NAME}-${VERSION}.tar.bz2
pushd ${NAME}-${VERSION}
	mkdir -v build
	cd build

#	CC=$LFS_TGT-gcc AR=$LFS_TGT-ar RANLIB=$LFS_TGT-ranlib ../configure --prefix=/tools --disable-nls --disable-werror --with-lib-path=/tools/lib --with-sysroot
	CC=$LFS_TGT-gcc AR=$LFS_TGT-ar RANLIB=$LFS_TGT-ranlib ../configure --prefix=/tools --disable-nls --disable-werror --with-lib-path=/tools/lib --with-sysroot
	make $MAKEFLAGS||make
	make install
	make -C ld clean
	make -C ld LIB_PATH=/usr/lib:/lib
	cp -v ld/ld-new /tools/bin
popd
rm -rf ${NAME}-${VERSION}

#pass2
NAME=gcc
VERSION=6.3.0
tar -xvf ${NAME}-${VERSION}.tar.bz2
pushd ${NAME}-${VERSION}
	cat gcc/limitx.h gcc/glimits.h gcc/limity.h > $(dirname $($LFS_TGT-gcc -print-libgcc-file-name))/include-fixed/limits.h
	for file in gcc/config/{linux,i386/linux{,64}}.h
		do
			cp -uv $file{,.orig}
			sed -e 's@/lib\(64\)\?\(32\)\?/ld@/tools&@g' -e 's@/usr@/tools@g' $file.orig > $file
			echo '
#undef STANDARD_STARTFILE_PREFIX_1
#undef STANDARD_STARTFILE_PREFIX_2
#define STANDARD_STARTFILE_PREFIX_1 "/tools/lib/"
#define STANDARD_STARTFILE_PREFIX_2 ""' >> $file
			touch $file.orig
		done
	tar -xf ../mpfr-3.1.5.tar.xz
	mv -v mpfr-3.1.5 mpfr
	tar -xf ../gmp-6.1.2.tar.xz
	mv -v gmp-6.1.2 gmp
	tar -xf ../mpc-1.0.3.tar.gz
	mv -v mpc-1.0.3 mpc
	mkdir -v build
	cd build

#	CC=$LFS_TGT-gcc CXX=$LFS_TGT-g++ AR=$LFS_TGT-ar RANLIB=$LFS_TGT-ranlib ../configure --prefix=/tools --with-local-prefix=/tools --with-native-system-header-dir=/tools/include --enable-languages=c,c++ --disable-libstdcxx-pch --disable-multilib --disable-bootstrap --disable-libgomp
	CC=$LFS_TGT-gcc CXX=$LFS_TGT-g++ AR=$LFS_TGT-ar RANLIB=$LFS_TGT-ranlib ../configure --prefix=/tools --with-local-prefix=/tools --with-native-system-header-dir=/tools/include --enable-languages=c,c++ --disable-libstdcxx-pch --disable-multilib --disable-bootstrap --disable-libgomp
	make $MAKEFLAGS||make
	make install
	ln -sv gcc /tools/bin/cc
popd
rm -rf ${NAME}-${VERSION}

echo 'int main(){}' > dummy.c
cc dummy.c
readelf -l a.out | grep ': /tools'

read -t 30 -p "check out "||true
rm -v dummy.c a.out

NAME=tcl-core
VERSION=8.6.6
tar -xvf ${NAME}${VERSION}-src.tar.gz
pushd tcl${VERSION}
	cd unix
	./configure --prefix=/tools
	make $MAKEFLAGS||make
	make install
	chmod -v u+w /tools/lib/libtcl8.6.so
	make install-private-headers
	ln -sv tclsh8.6 /tools/bin/tclsh
popd
rm -rf tcl${VERSION}

NAME=expect
VERSION=5.45
tar -xvf ${NAME}${VERSION}.tar.gz
pushd ${NAME}${VERSION}
	cp -v configure{,.orig}
	sed 's:/usr/local/bin:/bin:' configure.orig > configure
	./configure --prefix=/tools --with-tcl=/tools/lib --with-tclinclude=/tools/include
	make $MAKEFLAGS||make
	make SCRIPTS="" install
popd
rm -rf ${NAME}${VERSION}

NAME=dejagnu
VERSION=1.6
tar -xvf ${NAME}-${VERSION}.tar.gz
pushd ${NAME}-${VERSION}
	./configure --prefix=/tools
	make install
popd
rm -rf ${NAME}-${VERSION}

NAME=check
VERSION=0.11.0
tar -xvf ${NAME}-${VERSION}.tar.gz
pushd ${NAME}-${VERSION}
	PKG_CONFIG= ./configure --prefix=/tools
	make $MAKEFLAGS||make
	make install
popd
rm -rf ${NAME}-${VERSION}

NAME=ncurses
VERSION=6.0
tar -xvf  ${NAME}-${VERSION}.tar.gz
pushd  ${NAME}-${VERSION}
	./configure --prefix=/tools --with-shared --without-debug --without-ada --enable-widec --enable-overwrite
	make $MAKEFLAGS||make
	make install
popd
rm -rf ${NAME}-${VERSION}

NAME=bash
VERSION=4.4
tar -xvf ${NAME}-${VERSION}.tar.gz
pushd ${NAME}-${VERSION}
	./configure --prefix=/tools --without-bash-malloc
	make $MAKEFLAGS||make
	make install
	ln -sv bash /tools/bin/sh
popd
rm -rf ${NAME}-${VERSION}

NAME=bison
VERSION=3.0.4
tar -xvf ${NAME}-${VERSION}.tar.xz
pushd ${NAME}-${VERSION}
	./configure --prefix=/tools
	make $MAKEFLAGS||make
	make install
popd
rm -rf ${NAME}-${VERSION}

NAME=bzip2
VERSION=1.0.6
tar -xvf ${NAME}-${VERSION}.tar.gz
pushd ${NAME}-${VERSION}
	make $MAKEFLAGS||make
	make PREFIX=/tools install
popd
rm -rf ${NAME}-${VERSION}

NAME=coreutils
VERSION=8.26
tar -xvf ${NAME}-${VERSION}.tar.xz
pushd ${NAME}-${VERSION}
	./configure --prefix=/tools --enable-install-program=hostname
	make $MAKEFLAGS||make
	make install
popd
rm -rf ${NAME}-${VERSION}

NAME=diffutils
VERSION=3.5
tar -xvf ${NAME}-${VERSION}.tar.xz
pushd ${NAME}-${VERSION}
	./configure --prefix=/tools
	make $MAKEFLAGS||make
	make install
popd
rm -rf ${NAME}-${VERSION}

NAME=file
VERSION=5.30
tar -xvf ${NAME}-${VERSION}.tar.gz
pushd ${NAME}-${VERSION}
	./configure --prefix=/tools
	make $MAKEFLAGS||make
	make install
popd
rm -rf ${NAME}-${VERSION}

NAME=findutils
VERSION=4.6.0 
tar -xvf ${NAME}-${VERSION}.tar.gz
pushd ${NAME}-${VERSION}
	./configure --prefix=/tools
	make $MAKEFLAGS||make
	make install
popd
rm -rf ${NAME}-${VERSION}

NAME=gawk
VERSION=4.1.4
tar -xvf ${NAME}-${VERSION}.tar.xz
pushd ${NAME}-${VERSION}
	./configure --prefix=/tools
	make $MAKEFLAGS||make
	make install
popd
rm -rf ${NAME}-${VERSION}

NAME=gettext
VERSION=0.19.8.1
tar -xvf ${NAME}-${VERSION}.tar.xz
pushd ${NAME}-${VERSION}
	cd gettext-tools
	EMACS="no" ./configure --prefix=/tools --disable-shared
	make -C gnulib-lib
	make -C intl pluralx.c
	make -C src msgfmt
	make -C src msgmerge
	make -C src xgettext
	cp -v src/{msgfmt,msgmerge,xgettext} /tools/bin
popd
rm -rf ${NAME}-${VERSION}

NAME=grep
VERSION=3.0
tar -xvf ${NAME}-${VERSION}.tar.xz
pushd ${NAME}-${VERSION}
	./configure --prefix=/tools
	make $MAKEFLAGS||make
	make install
popd
rm -rf ${NAME}-${VERSION}

NAME=gzip
VERSION=1.8 
tar -xvf ${NAME}-${VERSION}.tar.xz
pushd ${NAME}-${VERSION}
	./configure --prefix=/tools
	make $MAKEFLAGS||make
	make install
popd
rm -rf ${NAME}-${VERSION}

NAME=m4
VERSION=1.4.18
tar -xvf ${NAME}-${VERSION}.tar.xz
pushd ${NAME}-${VERSION}
	./configure --prefix=/tools
	make $MAKEFLAGS||make
	make install
popd
rm -rf ${NAME}-${VERSION}

NAME=make
VERSION=4.2.1
tar -xvf ${NAME}-${VERSION}.tar.bz2
pushd ${NAME}-${VERSION}
	./configure --prefix=/tools --without-guile
	make $MAKEFLAGS||make
	make install
popd
rm -rf ${NAME}-${VERSION}

NAME=patch
VERSION=2.7.5
tar -xvf ${NAME}-${VERSION}.tar.xz
pushd ${NAME}-${VERSION}
	./configure --prefix=/tools
	make $MAKEFLAGS||make
	make install
popd
rm -rf ${NAME}-${VERSION}

NAME=perl
VERSION=5.24.1
tar -xvf ${NAME}-${VERSION}.tar.bz2
pushd ${NAME}-${VERSION}
	sh Configure -des -Dprefix=/tools -Dlibs=-lm
	make $MAKEFLAGS||make
	cp -v perl cpan/podlators/scripts/pod2man /tools/bin
	mkdir -pv /tools/lib/perl5/${VERSION}
	cp -Rv lib/* /tools/lib/perl5/${VERSION}
popd
rm -rf ${NAME}-${VERSION}

NAME=sed
VERSION=4.4
tar -xvf ${NAME}-${VERSION}.tar.xz
pushd ${NAME}-${VERSION}
	./configure --prefix=/tools
	make $MAKEFLAGS||make
	make install
popd
rm -rf ${NAME}-${VERSION}

NAME=tar
VERSION=1.29
tar -xvf ${NAME}-${VERSION}.tar.xz
pushd ${NAME}-${VERSION}
	./configure --prefix=/tools
	make $MAKEFLAGS||make
	make install
popd
rm -rf ${NAME}-${VERSION}

NAME=texinfo
VERSION=6.3
tar -xvf ${NAME}-${VERSION}.tar.xz
pushd ${NAME}-${VERSION}
	./configure --prefix=/tools
	make $MAKEFLAGS||make
	make install
popd
rm -rf ${NAME}-${VERSION}

NAME=util-linux
VERSION=2.29.1
tar -xvf ${NAME}-${VERSION}.tar.xz
pushd ${NAME}-${VERSION}
	./configure --prefix=/tools --without-python --disable-makeinstall-chown --without-systemdsystemunitdir PKG_CONFIG=""
	make $MAKEFLAGS||make
	make install
popd
rm -rf ${NAME}-${VERSION}

NAME=xz
VERSION=5.2.3
tar -xvf${NAME}-${VERSION}.tar.xz
pushd ${NAME}-${VERSION}
	./configure --prefix=/tools
	make $MAKEFLAGS||make
	make install
popd
rm -rf ${NAME}-${VERSION}

#/usr/bin/strip --strip-debug /tools/lib/* || true
/usr/bin/strip --strip-unneeded /tools/{,s}bin/* || true
rm -rf /tools/{,share}/{info,man,doc}

echo $ADMINPWD|sudo -S chown -R root:root $LFS/tools 2>/dev/null
cd $LFS/tools
echo $ADMINPWD|sudo -S tar -zpcvf ../tools-${LFSVERSION}.tar.gz .


