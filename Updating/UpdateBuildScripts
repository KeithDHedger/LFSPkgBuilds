#!/bin/bash -e

#Â©keithhedger Sat 29 Apr 17:38:29 BST 2017 kdhedger68713@gmail.com

if [ -e ../LFSScripts/SystemData ];then
	. ../LFSScripts/SystemData
else
	echo "No SystemData file found ..."
	exit 1
fi

#(cd ../LFSScripts;./ShowSystemData)||true

RED='\e[1;31m'
GREEN='\e[1;32m'
BLACK='\e[0;30m'
NORMAL='\e[0;0m'

declare -a RESULTS
declare -a DEPENDSON

PACKAGETOTEST="$1"
INSTALLEDVERSION=""
UPDATETOVERSION=""
PATHTOSCRIPT=""
INLINE=${INLINE:-"-i"}

parseArray ()
{
for ((j=0;j<${#RESULTS};j++))
	do
		if [ "X${RESULTS[j]}" != "X" ];then
			case ${RESULTS[j]} in
				"Script version="*)
					INSTALLEDVERSION=${RESULTS[j]##*=}
					INSTALLEDVERSION=${INSTALLEDVERSION//[$'\t\r\n ']}
					;;
				*"may need updating to"*)
					UPDATETOVERSION=${RESULTS[j]##* }
					UPDATETOVERSION=${UPDATETOVERSION//[$'\t\r\n ']}
					;;
				"Path to script="*)
					PATHTOSCRIPT=${RESULTS[j]##*=}
					PATHTOSCRIPT=${LFS}${PATHTOSCRIPT//[$'\t\r\n ']}
			esac
		fi
	done	
}

if [ "X$PACKAGETOTEST" = "X" ];then
	echo "Need package name ..."
	exit 1
fi

if [ "X$(lfspkg -R $LFS -C $PACKAGETOTEST 2>&1|grep -i 'No version info for')" != "X" ];then
	echo "Can't find version info for $PACKAGETOTEST ..."
	exit 1
fi

readarray RESULTS < <(lfspkg -R $LFS -C $PACKAGETOTEST 2>/dev/null)
parseArray

if [ "X$INSTALLEDVERSION" = "X" ] || [ "X$UPDATETOVERSION" = "X" ] || [ "X$PATHTOSCRIPT" = "X" ];then
	echo -e "${RED}Can't auto-update $PACKAGETOTEST ...${NORMAL}"
	lfspkg -R $LFS -S $PACKAGETOTEST
	echo "....."
	lfspkg -R $LFS -C $PACKAGETOTEST 2>/dev/null
	exit 1
fi

echo -e "${GREEN}Auto-update $PACKAGETOTEST $INSTALLEDVERSION to $UPDATETOVERSION${NORMAL}\n"

readarray DEPENDSON < <(lfspkg -R $LFS -O $PACKAGETOTEST 2>/dev/null)
for ((j=1;j<${#DEPENDSON};j++))
	do
		if [ "X${DEPENDSON[j]}" != "X" ];then
			DEPENDFILE=${DEPENDSON[j]##*- }
			DEPENDFILE=${DEPENDFILE//[$'\t\r\n ']}
			echo -e "${GREEN}Updating $DEPENDFILE ...${NORMAL}"
#			sed $INLINE "s|\(\b${PACKAGETOTEST}\b\)-[0-9].*|\1-$UPDATETOVERSION|gI" $DEPENDFILE
			sed $INLINE "s|\(\b${PACKAGETOTEST}\b\)-[0-9][.0-9]*|\1-$UPDATETOVERSION|gI" $DEPENDFILE
		fi
	done

echo

echo -e "${GREEN}Please check $PATHTOSCRIPT ...${NORMAL}"
sed $INLINE "s|VERSION=.*|VERSION=\"$UPDATETOVERSION\"|" "$PATHTOSCRIPT"
xdg-open "$PATHTOSCRIPT" &>/dev/null






