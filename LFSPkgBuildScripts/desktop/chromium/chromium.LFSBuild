#!/bin/bash -e

. /usr/share/LFSPkg/LFSFunctions

DEPENDS="alsa-lib-1.1.5 Cups-2.2.6 dbus-1.12.4 node-9.5.0 Python-2.7.14 libgcrypt-1.8.2 libexif-0.6.21 git-2.16.2 pulseaudio-11.1 bzip2-1.0.6 flac-1.3.2 harfbuzz-1.7.5 icu-60.2 libevent-2.1.8 openjpeg-2.3.0 libpng-1.6.34 nspr-4.18 openssl-1.1.0 xdg-utils-1.1.2 yasm-1.3.0 krb5-1.15 desktop-file-utils-0.23 File-BaseDir-0.07 usbutils-009  ninja-1.8.2 gtk3-3.22.28 opus-1.2.1"

if ! lfspkg -B "$DEPENDS";then
	exit 100
fi

PKGNAME="chromium"
TARNAME="$PKGNAME"
VERSION="64.0.3282.186"
BUILD=${BUILD:-1}
SECTION="DESKTOP"
SUFFIX="LFSPKG"
TARBALL="${TARNAME}-${VERSION}.tar.xz"
PKG="${OUTPUT}/${PKGNAME}"
DOWHAT=${1:-"build"}
CWD=$(pwd)

#Be aware add blockers hang this version of chromium
#The Google API Key and OAuth tokens below are specific to Me. If using these instructions for another distro, or if you intend to distribute binary copies of the software using these instructions, please obtain your own keys following the instructions located at https://www.chromium.org/developers/how-tos/api-keys.

if [ ${USETHESEKEYS:-0} -eq 0 ];then
	echo "The Google API Key and OAuth tokens below are specific to Me. If using these instructions for another distro, or if you intend to distribute binary copies of the software using these instructions, please obtain your own keys following the instructions located at https://www.chromium.org/developers/how-tos/api-keys."
	echo "This is a bit clearer:"
	echo "https://gist.github.com/ezeeyahoo/dc4bdd250c6c6468959e107ddaef53f4"
	echo "Change the variables below to hold your own keys, or leave them as is:"
	echo "export USETHESEKEYS=1"
	echo "Then re-run this script"
	exit 100
else
	GOOGLE_API_KEY="AIzaSyBhWJ-j5RXyt5911BMuVen-WuS10mvOnrY"
	GOOGLE_DEFAULT_CLIENT_ID="952820686433-mbp5sv9scfj78siq96jlvrem47qgvbi3.apps.googleusercontent.com"
	GOOGLE_DEFAULT_CLIENT_SECRET="XU4b-j0Ssy-XkTvSVmiFMvNY"
fi

scriptLog "${PKGNAME}-${VERSION}"
gettar "https://commondatastorage.googleapis.com/chromium-browser-official/${TARBALL}" $SECTION
gettar "http://www.linuxfromscratch.org/patches/blfs/8.2/${PKGNAME}-${VERSION}-constexpr-1.patch" $SECTION

rm -rf "$PKG" || true
mkdir -p "$PKG"

case "$ARCH" in
	x86_64)
		DEBNAME=google-chrome-stable_current_amd64.deb
		gettar "https://dl.google.com/linux/direct/$DEBNAME" $SECTION
		gettar "https://fpdownload.macromedia.com/pub/labs/flashruntimes/flashplayer/linux64/flash_player_ppapi_linux.x86_64.tar.gz" $SECTION
		;;
	*)
		gettar "http://mirror.retrosnub.co.uk/apt/google/pool/main/g/google-chrome-stable/google-chrome-stable_48.0.2564.116-1_i386.deb" $SECTION
		gettar "https://fpdownload.macromedia.com/pub/labs/flashruntimes/flashplayer/linux32/flash_player_ppapi_linux.i386.tar.gz" $SECTION
		;;
esac

pushd $COMPILEAT 2>/dev/null||true
	extractarchive "${SOURCEARCHIVES}/${SECTION}/${TARBALL}"
	pushd "${TARNAME}-${VERSION}"
		line='#define WIDEVINE_CDM_VERSION_STRING "Pinkie Pie"' 
		sed "/WIDEVINE_CDM_AVAILABLE/a$line" -i third_party/widevine/cdm/stub/widevine_cdm_version.h
		sed '/static_assert/s:^://:' -i third_party/WebKit/Source/platform/wtf/text/TextCodec.h
		patch -Np1 -i ${SOURCEARCHIVES}/${SECTION}/${PKGNAME}-${VERSION}-constexpr-1.patch

		for LIB in flac freetype harfbuzz-ng libjpeg libjpeg_turbo libwebp libxslt yasm
			do
				find -type f -path "*third_party/$LIB/*" \! -path "*third_party/$LIB/chromium/*" \! -path "*third_party/$LIB/google/*" \! -path "*base/third_party/icu/*" \! -path './third_party/yasm/run_yasm.py' \! -regex '.*\.\(gn\|gni\|isolate\|py\)' \! -path './third_party/freetype/src/src/psnames/pstables.h' -delete
			done

		python build/linux/unbundle/replace_gn_files.py --system-libraries flac libjpeg libxml libevent libwebp libxslt yasm opus
		python third_party/libaddressinput/chromium/tools/update-strings.py

		GN_CONFIG=("google_api_key=\"$GOOGLE_API_KEY\""
		"google_default_client_id=\"$GOOGLE_DEFAULT_CLIENT_ID\""
		"google_default_client_secret=\"$GOOGLE_DEFAULT_CLIENT_SECRET\""
		'clang_use_chrome_plugins=false'
		'enable_hangout_services_extension=true'
		'enable_nacl=false'
		'enable_nacl_nonsfi=false'
		'enable_swiftshader=false'
		'enable_widevine=true'
		'fatal_linker_warnings=false'
		'ffmpeg_branding="Chrome"'
		'fieldtrial_testing_like_official_build=true'
		'is_debug=false'
		'is_clang=false'
		'link_pulseaudio=true'
		'linux_use_bundled_binutils=false'
		'proprietary_codecs=true'
		'remove_webcore_debug_symbols=true'
		'symbol_level=0'
		'treat_warnings_as_errors=false'
		'use_allocator="none"'
		'use_cups=true'
		'use_gconf=false'
		'use_gnome_keyring=false'
		'use_gold=false'
		'use_gtk3=true'
		'use_kerberos=true'
		'use_pulseaudio=true'
		'use_sysroot=false'
		'use_system_freetype=true'
		'use_system_harfbuzz=true')

		python tools/gn/bootstrap/bootstrap.py --gn-gen-args "${GN_CONFIG[*]}"
		out/Release/gn gen out/Release --args="${GN_CONFIG[*]}"

		mkdir -vp third_party/node/linux/node-linux-x64/bin
		ln -s /usr/bin/node third_party/node/linux/node-linux-x64/bin/||true

		ninja -C out/Release chrome chrome_sandbox chromedriver widevinecdmadapter

		install -vDm755  out/Release/chrome $PKG/usr/lib${LIBDIRSUFFIX}/chromium/chromium
		install -vDm4755 out/Release/chrome_sandbox $PKG/usr/lib${LIBDIRSUFFIX}/chromium/chrome-sandbox
		install -vDm755  out/Release/chromedriver $PKG/usr/lib${LIBDIRSUFFIX}/chromium/chromedriver

		mkdir -vp $PKG/usr/bin $PKG/usr/share/applications $PKG/usr/share/man/man1||true
		ln -svf /usr/lib${LIBDIRSUFFIX}/chromium/chromium $PKG/usr/bin
		ln -svf /usr/lib${LIBDIRSUFFIX}/chromium/chromedriver $PKG/usr/bin

		install -vDm644 out/Release/gen/content/content_resources.pak $PKG/usr/lib${LIBDIRSUFFIX}/chromium
		install -vDm644 out/Release/icudtl.dat $PKG/usr/lib${LIBDIRSUFFIX}/chromium/icudtl.dat
		install -vDm644 out/Release/{*.pak,*.bin} $PKG/usr/lib${LIBDIRSUFFIX}/chromium/		

		sed -i -e "s/@@MENUNAME@@/Chromium/g" -e "s/@@PACKAGE@@/chromium/g" -e "s/@@USR_BIN_SYMLINK_NAME@@/chromium/g" chrome/installer/linux/common/desktop.template chrome/app/resources/manpage.1.in

		install -vDm644 chrome/installer/linux/common/desktop.template $PKG/usr/share/applications/chromium.desktop
		install -vDm644 chrome/app/resources/manpage.1.in $PKG/usr/share/man/man1/chromium.1

		cp -av out/Release/locales $PKG/usr/lib${LIBDIRSUFFIX}/chromium
		chown -Rv root:root $PKG/usr/lib${LIBDIRSUFFIX}/chromium/locales

		for size in 16 32
			do
				install -vDm644 "chrome/app/theme/default_100_percent/chromium/product_logo_$size.png" "$PKG/usr/share/icons/hicolor/${size}x${size}/apps/chromium.png"
			done

		for size in 22 24 48 64 128 256
			do
				install -vDm644 "chrome/app/theme/chromium/product_logo_$size.png" "$PKG/usr/share/icons/hicolor/${size}x${size}/apps/chromium.png"
			done

		mkdir -vp $PKG/usr/share/applications||true
		mkdir temp||true
		cd temp
		case $ARCH in
			x86_64)
				ar -x ${SOURCEARCHIVES}/${SECTION}/$DEBNAME
				;;
			*)
				ar -x ${SOURCEARCHIVES}/${SECTION}/google-chrome-stable_48.0.2564.116-1_i386.deb
				;;
		esac

		tar -xf data.tar.xz
		mkdir -vp $PKG/usr/lib${LIBDIRSUFFIX}/chromium
		install -vm755 ../out/Release/libwidevinecdmadapter.so $PKG/usr/lib${LIBDIRSUFFIX}/chromium/
		case "$ARCH" in
			x86_64)
				install -vm755 opt/google/chrome/WidevineCdm/_platform_specific/linux_x64/libwidevinecdm.so $PKG/usr/lib${LIBDIRSUFFIX}/chromium/
				;;
			*)
				install -vm755 opt/google/chrome/libwidevinecdm.so $PKG/usr/lib${LIBDIRSUFFIX}/chromium/
				;;
		esac

		case "$ARCH" in
			x86_64)
				tar -xf "${SOURCEARCHIVES}/${SECTION}/flash_player_ppapi_linux.x86_64.tar.gz"
				;;
			*)
				tar -xf "${SOURCEARCHIVES}/${SECTION}/flash_player_ppapi_linux.i386.tar.gz"
				;;
		esac
		install -vdm755 $PKG/usr/lib/PepperFlash
		install -vm755 libpepflashplayer.so $PKG/usr/lib/PepperFlash
		install -vm644 manifest.json $PKG/usr/lib/PepperFlash
	
	popd

	checketc $PKG
	packageclean "$PKG" "$CWD"

	pushd "$PKG"
		lfspkg -n "$PKGNAME" -p "$VERSION" -d $SECTION -b $BUILD -s $SUFFIX -m
	popd

	case $DOWHAT in
		up*)
			lfspkg "^${PKGNAME}-[0-9][0-9]*" "${PKGARCHIVES}/${SECTION}/${PKGNAME}-${VERSION}-${BUILD}_${SECTION}_${SUFFIX}.tar.gz" -u
			;;
		"install")
			lfspkg "${PKGARCHIVES}/${SECTION}/${PKGNAME}-${VERSION}-${BUILD}_${SECTION}_${SUFFIX}.tar.gz" -i
			;;
		"build")
			echo "Just built"
			;;
		*)
			echo "*** Unknown command ***"
			exit 1
	esac

	echo "Removing source folder, please wait ..."
	rm -r "$PKG" "${TARNAME}-${VERSION}"
popd 2>/dev/null||true