#!/bin/bash -e

#Copy the config for the running kernel if needed
#gunzip < /proc/config.gz > $(pwd)/config-$linux_version

. /usr/share/LFSPkg/LFSFunctions

trap 'echo -e "$0 ${RED}FAILED${NORMAL} at line ${GREEN}${LINENO}${NORMAL}"' ERR

. PkgVersions

PKGNAME="kernel"
TARNAME="linux"
VERSION=$linux_version
BUILD=${BUILD:-1}
SECTION="KERNEL"
SUFFIX="LFSPKG"
TARBALL="${TARNAME}-${VERSION}.$linux_arctype"
#various places for ckernel configs
#KERNELCONFIG=${KERNELCONFIG:-"$(pwd)/config-${linux_version}-${BUILD}"}
#KERNELCONFIG=${KERNELCONFIG:-"/LFSPkgBuildScripts/configs/kernel/config-${linux_version}-${BUILD}"}
#KERNELCONFIG=${KERNELCONFIG:-"$(pwd)/allyesconfig"}
#use config from running kernel -- CAUTION
mkdir -vp ${TMP}
gunzip < /proc/config.gz > "${TMP}/config-${VERSION}"
KERNELCONFIG=${KERNELCONFIG:-"${TMP}/config-${VERSION}"}
KERNELSOURCEDIR="${SOURCEARCHIVES}/${SECTION}/${PKGNAME}-${VERSION}_${BUILD}"
PKG="${OUTPUT}/${PKGNAME}"
DOWHAT=${1:-"build"}

mkdir -vp ${KERNELSOURCEDIR}||true
rm -rf "$PKG" || true
mkdir -p "$PKG"

scriptLog "${PKGNAME}-${VERSION}"

pushd "${KERNELSOURCEDIR}"
	(mkdir -vp "${TARNAME}-${VERSION}"||true;tar -C "${TARNAME}-${VERSION}" -xvf "${SOURCEARCHIVES}/${SECTION}/${TARBALL}" --strip-components=1)
	pushd "${TARNAME}-${VERSION}"
		make mrproper
		cp "$KERNELCONFIG" .config
		make menuconfig|| exit 100
		make $MAKEFLAGS bzImage||make bzImage||exit 100
		make $MAKEFLAGS modules||make modules||exit 100
		make modules_install INSTALL_MOD_PATH=$PKG INSTALL_PATH=$PKG

		ARCH=${ARCH:-$(uname -m)}
		mkdir -vp $PKG/boot $PKG/usr/src
		case $ARCH in
			i*86)
				cp -v arch/x86/boot/bzImage $PKG/boot/vmlinuz-${VERSION}-${BUILD}
				;;
			x86_64)
				cp -v arch/x86_64/boot/bzImage $PKG/boot/vmlinuz-${VERSION}-${BUILD}
				;;
		esac
		cp -v .config $PKG/boot/config-${VERSION}-${BUILD}
		cp -v System.map $PKG/boot/System.map-${VERSION}-${BUILD}

		install -d $PKG/usr/share/doc/${TARNAME}-${VERSION}-${BUILD}
		cp -r Documentation/* $PKG/usr/share/doc/${TARNAME}-${VERSION}-${BUILD}
		if [ "X$EXTRAINFO" != "X" ];then 
			echo -e "$EXTRAINFO" > "$PKG/usr/share/doc/${TARNAME}-${VERSION}-${BUILD}/ExtraBuildInfo"
		fi
		mv ${PKG}/lib/modules/${VERSION} ${PKG}/lib/modules/${VERSION}-${BUILD}
		ln -sv ${VERSION}-${BUILD} ${PKG}/lib/modules/${VERSION}

		pushd $PKG/boot
	 		ln -sfv vmlinuz-${VERSION}-${BUILD} vmlinuz-${VERSION}
			ln -sfv vmlinuz-${VERSION}-${BUILD} vmlinuz
			ln -sfv System.map-${VERSION}-${BUILD} System.map-${VERSION}
			ln -sfv config-${VERSION}-${BUILD} config-${VERSION}
		popd

		pushd $PKG/usr/src
			ln -sfv ${KERNELSOURCEDIR}/${TARNAME}-${VERSION} ${TARNAME}-${VERSION}
		popd

		chown -R 0:0 .
		make clean
		make prepare
		rm .version ||true
	popd
popd

checketc "$PKG"
packageclean "$PKG" "$CWD"

pushd "$PKG"
	lfspkg -n "$PKGNAME" -p "$VERSION" -d $SECTION -b $BUILD -s $SUFFIX -m
popd

case $DOWHAT in
	up*)
		lfspkg "^${PKGNAME}-[0-9][0-9]*" "${PKGARCHIVES}/${SECTION}/${PKGNAME}-${VERSION}-${BUILD}_${SECTION}_${SUFFIX}.tar.gz" -u
		;;
	"install")
		lfspkg "${PKGARCHIVES}/${SECTION}/${PKGNAME}-${VERSION}-${BUILD}_${SECTION}_${SUFFIX}.tar.gz" -i
		;;
	"build")
		echo "Just built"
		;;
	*)
		echo "*** Unknown command ***"
		exit 1
esac

rm -r "$PKG"





