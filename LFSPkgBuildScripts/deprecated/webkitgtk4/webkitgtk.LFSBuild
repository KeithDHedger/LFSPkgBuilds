#!/bin/bash -e

. /usr/share/LFSPkg/LFSFunctions

trap 'echo -e "$0 ${RED}FAILED${NORMAL} at line ${GREEN}${LINENO}${NORMAL}"' ERR

DEPENDS="gst-plugins-base-1.18.3 GTK-2.24.33 icu-68.2 libsoup-2.72.0 MesaLib-20.3.4 Ruby-3.0.0 SQLite-3.34.10 Which-2.21 libwebp-1.2.0 libsecret-0.20.4 gtk-doc-1.33.2 libgcrypt-1.9.2 libnotify3-0.7.9"

if ! lfspkg -B "$DEPENDS";then
	exit 100
fi

PKGNAME="webkitgtk4"
TARNAME="$PKGNAME"
VERSION="2.30.5"
BUILD=${BUILD:-1}
SECTION="NET"
SUFFIX="LFSPKG"
TARBALL="${TARNAME}-${VERSION}.tar.xz"
PKG="${OUTPUT}/${PKGNAME}"
DOWHAT=${1:-"build"}
CWD=$(pwd)

scriptLog "${PKGNAME}-${VERSION}"
gettar "http://webkitgtk.org/releases/${TARBALL}" $SECTION
rm -rf "$PKG" || true
mkdir -p "$PKG"

pushd $COMPILEAT 2>/dev/null||true
	extractarchive "${SOURCEARCHIVES}/${SECTION}/${TARBALL}"
	pushd "${TARNAME}-${VERSION}"
		mkdir -vp build||true
		cd build
		cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_SKIP_RPATH=ON -DPORT=GTK -DLIB_INSTALL_DIR=/usr/lib -DUSE_LIBHYPHEN=OFF -DENABLE_MINIBROWSER=ON -DUSE_WOFF2=OFF -DUSE_WPE_RENDERER=OFF -DUSE_SYSTEMD=OFF -DENABLE_BUBBLEWRAP_SANDBOX=OFF -DUSE_LIBNOTIFY=OFF -Wno-dev -G Ninja ..
    
		ninja $MAKEFLAGS||ninja -j1||exit 100
		DESTDIR=$PKG ninja install||exit 100
	popd

	checketc $PKG
	packageclean "$PKG" "$CWD"

	pushd "$PKG"
		lfspkg -n "$PKGNAME" -p "$VERSION" -d $SECTION -b $BUILD -s $SUFFIX -m
	popd

	case $DOWHAT in
		up*)
			lfspkg "^${PKGNAME}-[0-9][0-9]*" "${PKGARCHIVES}/${SECTION}/${PKGNAME}-${VERSION}-${BUILD}_${SECTION}_${SUFFIX}.tar.gz" -u
			;;
		"install")
			lfspkg "${PKGARCHIVES}/${SECTION}/${PKGNAME}-${VERSION}-${BUILD}_${SECTION}_${SUFFIX}.tar.gz" -i
			;;
		"build")
			echo "Just built"
			;;
		*)
			echo "*** Unknown command ***"
			exit 1
	esac

	rm -r "$PKG" "${TARNAME}-${VERSION}"
popd 2>/dev/null||true


















