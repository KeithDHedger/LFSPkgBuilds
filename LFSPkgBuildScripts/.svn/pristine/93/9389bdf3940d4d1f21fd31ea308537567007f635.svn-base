#!/bin/bash -e

#!/bin/bash -e

. /usr/share/LFSPkg/LFSFunctions

DEPENDS="libgcrypt-1.6.3 libexif-0.6.21 git-2.5.0 pulseaudio-6.0 bzip2-1.0.6 flac-1.3.1 harfbuzz-1.0.3 icu-55.1 libevent-2.0.22 openjpeg-1.5.2 libpng-1.6.18 nspr-4.10.9 openssl-1.0.2 xdg-utils-1.1.0 yasm-1.3.0"
if ! lfspkg -B "$DEPENDS";then
	exit 100
fi

PKGNAME="chromium"
TARNAME="$PKGNAME"
#VERSION="41.0.2272.76" 
VERSION="47.0.2526.106"
BUILD=${BUILD:-1}
SECTION="DESKTOP"
SUFFIX="LFSPKG"
TARBALL="${TARNAME}-${VERSION}.tar.xz"
#https://projects.archlinux.org/svntogit/packages.git/tree/trunk?h=packages/chromium
gettar "https://commondatastorage.googleapis.com/chromium-browser-official/${TARBALL}" $SECTION
pushd ${SOURCEARCHIVES}/${SECTION}
	wget https://projects.archlinux.org/svntogit/packages.git/plain/trunk/chromium-fix-print-preview-on-en_GB-locale.patch?h=packages/chromium -O chromium-fix-print-preview-on-en_GB-locale.patch
	wget https://projects.archlinux.org/svntogit/packages.git/plain/trunk/chromium-widevine.patch?h=packages/chromium -O chromium-widevine.patch
	wget https://projects.archlinux.org/svntogit/packages.git/plain/trunk/0001-Add-FPDFAPIJPEG_-prefix-to-more-libjpeg-functions.patch?h=packages/chromium -O 0001-Add-FPDFAPIJPEG_-prefix-to-more-libjpeg-functions.patch
popd

if [ ! -d ${SOURCEARCHIVES}/depot_tools ];then
	pushd ${SOURCEARCHIVES}
		git clone https://chromium.googlesource.com/chromium/tools/depot_tools.git
	popd
fi

DDSSE=" -Ddisable_sse2=1 "
GOOGLE_API_KEY=AIzaSyBhWJ-j5RXyt5911BMuVen-WuS10mvOnrY
GOOGLE_DEFAULT_CLIENT_ID=952820686433-mbp5sv9scfj78siq96jlvrem47qgvbi3.apps.googleusercontent.com
GOOGLE_DEFAULT_CLIENT_SECRET=XU4b-j0Ssy-XkTvSVmiFMvNY

LFSFLAGS="${LFSFLAGS}  -Wno-unused-local-typedefs "
export -n CFLAGS="$LFSFLAGS" CXXFLAGS="$LFSFLAGS"
export GYP_DEFINES=system_libdir=lib64
export GYP_DEFINES=python_ver=2.7.10

PKG="${OUTPUT}/${PKGNAME}"

DOWHAT=${1:-"build"}
rm -rf "$PKG" || true
mkdir -p "$PKG"
tar -xvf "${SOURCEARCHIVES}/${SECTION}/$TARBALL"

LFSFLAGS="${LFSFLAGS} -Wno-unused-local-typedefs "
DNACL=1
DSSE=1
PATH="/media/SkyNet/LFSSourceArchives-7.8/depot_tools:${PATH}"
export PATH

pushd "${TARNAME}-${VERSION}"
	touch chrome/test/data/webui/i18n_process_css_test.html
	sed -i "/'target_name': 'libvpx'/s/libvpx/&_new/" build/linux/unbundle/libvpx.gyp
	patch -Np1 -i ${SOURCEARCHIVES}/${SECTION}/chromium-fix-print-preview-on-en_GB-locale.patch
	patch -d third_party/pdfium -Np1 <${SOURCEARCHIVES}/${SECTION}/0001-Add-FPDFAPIJPEG_-prefix-to-more-libjpeg-functions.patch
	sed "s/@WIDEVINE_VERSION@/Pinkie Pie/" ${SOURCEARCHIVES}/${SECTION}/chromium-widevine.patch | patch -Np1

	find third_party/icu -type f \! -regex '.*\.\(gyp\|gypi\|isolate\)' -delete
	find . -name '*.py' -exec sed -i -r 's|/usr/bin/python$|&2|g' {} +
	mkdir "python2-path"
	ln -s /usr/bin/python2 "python2-path/python"

	_chromium_conf=(
	-Dclang=0
    -Ddisable_glibc=1
    -Denable_pepper_cdms=1
    -Denable_webrtc=1
    -Dffmpeg_branding=Chrome
    -Dgoogle_api_key=$GOOGLE_API_KEY
    -Dgoogle_default_client_id=$GOOGLE_DEFAULT_CLIENT_ID
    -Dgoogle_default_client_secret=$GOOGLE_DEFAULT_CLIENT_SECRET
    -Dicu_use_data_file_flag=0
    -Dlinux_sandbox_path=/usr/lib${LIBDIRSUFFIX}/${PKGNAME}/chrome_sandbox
    -Dlinux_strip_binary=1
    -Dlinux_use_bundled_binutils=0
    -Dlinux_use_bundled_gold=0
    -Dlinux_use_gold_binary=0
    -Dlinux_use_gold_flags=0
    -Dlogging_like_official_build=1
    -Dproprietary_codecs=1
    -Dremove_webcore_debug_symbols=1
    -Duse_allocator=none
    -Duse_gconf=0
    -Duse_kerberos=0
    -Duse_pulseaudio=1
    -Duse_system_bzip2=1
    -Duse_system_flac=1
    -Duse_system_ffmpeg=0
    -Duse_system_harfbuzz=1
    -Duse_system_icu=1
    -Duse_system_libevent=1
    -Duse_system_libjpeg=1
    -Duse_system_libpng=1
    -Duse_system_libxml=0
    -Duse_system_libxstl=0
    -Duse_system_nspr=1
    -Duse_system_opus=0
    -Duse_system_snappy=0
    -Duse_system_openssl=1
    -Duse_system_xdg_utils=1
    -Duse_system_yasm=1
    -Duse_system_zlib=0
    -Dwerror=
    -Drelease_extra_cflags="$LFSFLAGS"
    -Ddisable_nacl=${DNACL}
    -Ddisable_sse2=${DSSE}
    -Duse_gnome_keyring=0
	-Dlinux_link_gnome_keyring=0
	-Denable_hangout_services_extension=0
	-Ddisable_fatal_linker_warnings=1
	-Duse_mojo=0
	)

	third_party/libaddressinput/chromium/tools/update-strings.py
	build/linux/unbundle/replace_gyp_files.py "${_chromium_conf[@]}"
	build/gyp_chromium --depth=. "${_chromium_conf[@]}"
	ninja $MAKEFLAGS -C out/Release chrome chrome_sandbox chromedriver

# Manually install everything:
# The main binary:
	install -D out/Release/chrome $PKG/usr/lib${LIBDIRSUFFIX}/${PKGNAME}/${PKGNAME}
# The sandbox:
	install -D -m4755 -o root -g root out/Release/chrome_sandbox $PKG/usr/lib${LIBDIRSUFFIX}/${PKGNAME}/chrome-sandbox
# The Chromium implementation of the WebDriver wire protocol
# (automated testing of web apps):
	install -D out/Release/chromedriver $PKG/usr/lib${LIBDIRSUFFIX}/${PKGNAME}/chromedriver
# Copy over the remaining binaries:
	cp -a out/Release/{*.pak,*.bin} $PKG/usr/lib${LIBDIRSUFFIX}/${PKGNAME}/
#	if [ -f out/Release/natives_blob.bin ];then
#  		cp -a out/Release/{natives_blob.bin,snapshot_blob.bin} $PKG/usr/lib${LIBDIRSUFFIX}/${PKGNAME}/
#	fi
# Manually strip binaries so that 'nacl_irt_*.nexe' is left intact
	strip  --strip-unneeded $PKG/usr/lib${LIBDIRSUFFIX}/${PKGNAME}/{${PKGNAME},chrome-sandbox} $PKG/usr/lib${LIBDIRSUFFIX}/${PKGNAME}/chromedriver
# Add locales:
	cp -a out/Release/locales $PKG/usr/lib${LIBDIRSUFFIX}/${PKGNAME}/
# Add resource files:
	cp -a out/Release/resources $PKG/usr/lib${LIBDIRSUFFIX}/${PKGNAME}/
# Install a man page:
	install -D -m0644 out/Release/chrome.1 $PKG/usr/man/man1/${PKGNAME}.1
## Without this file, chromium refuses to start:
#	cp -a third_party/icu/source/data/in/icudtl.dat $PKG/usr/lib${LIBDIRSUFFIX}/${PKGNAME}/


# Install a wrapper script:
	install -D -m0755 ../${PKGNAME}.sh $PKG/usr/bin/${PKGNAME}
	sed -i -e "s/@LIBDIRSUFFIX@/${LIBDIRSUFFIX}/g" $PKG/usr/bin/${PKGNAME}
# Make the chromedriver available in the $PATH :
	ln -s ../lib${LIBDIRSUFFIX}/${PKGNAME}/chromedriver $PKG/usr/bin/chromedriver${SRCEXT}
# Install desktop icons:
	for size in 16 32
		do
			install -D -m0644 chrome/app/theme/default_100_percent/chromium/product_logo_$size.png $PKG/usr/share/icons/hicolor/${size}x${size}/apps/${PKGNAME}.png
		done

	for size in 22 24 48 64 128 256
		do
			install -D -m0644 chrome/app/theme/chromium/product_logo_$size.png $PKG/usr/share/icons/hicolor/${size}x${size}/apps/${PKGNAME}.png
		done
# Add a desktop file:
	install -D -m0644 ../${PKGNAME}.desktop $PKG/usr/share/applications/${PKGNAME}.desktop
popd

checketc "$PKG"
packageclean "$PKG"

pushd "$PKG"
	/usr/bin/lfspkg -n "$PKGNAME" -p "$VERSION" -d $SECTION -b $BUILD -s $SUFFIX -m
popd

case $DOWHAT in
	up*)
		lfspkg "^${PKGNAME}-[0-9][0-9]*" "${OUTPUT}/${SECTION}/${PKGNAME}-${VERSION}-${BUILD}_${SECTION}_${SUFFIX}.tar.gz" -u
		;;
	"install")
		lfspkg "${OUTPUT}/${SECTION}/${PKGNAME}-${VERSION}-${BUILD}_${SECTION}_${SUFFIX}.tar.gz" -i
		;;
	"build")
		echo "Just built"
		;;
	*)
		echo "*** Unknown command ***"
		exit 1
esac

rm -r "$PKG" "${TARNAME}-${VERSION}"
