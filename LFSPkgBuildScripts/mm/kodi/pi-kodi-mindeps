#!/bin/bash -e

export NODEPS=1
#export PATH="$PATH:/opt/java/bin"

if [ "$(lfspkg -S 5 make-ca)" = "false" ];then
	cd /LFSPkgBuildScripts/devel/make-ca/
	./make-ca.LFSBuild install
fi

if [ "$(lfspkg -S 5 libuv)" = "false" ];then
	cd /LFSPkgBuildScripts/libs/libuv/
	./libuv.LFSBuild install
fi

if [ "$(lfspkg -S 5 libarchive)" = "false" ];then
	cd /LFSPkgBuildScripts/libs/libarchive/
	./libarchive.LFSBuild install
fi

if [ "$(lfspkg -S 5 curl)" = "false" ];then
	cd /LFSPkgBuildScripts/net/curl/
	./curl.LFSBuild install
fi

if [ "$(lfspkg -S 5 cmake)" = "false" ];then
	cd /LFSPkgBuildScripts/devel/cmake/
	./cmake.LFSBuild install
fi

if [ "$(lfspkg -S 5 which)" = "false" ];then
	cd /LFSPkgBuildScripts/sys/which/
	./which.LFSBuild install
fi

if [ "$(lfspkg -S 5 zip)" = "false" ];then
	cd /LFSPkgBuildScripts/sys/zip/
	./zip.LFSBuild install
fi

if [ "$(lfspkg -S 5 unzip)" = "false" ];then
	cd /LFSPkgBuildScripts/sys/unzip/
	./unzip.LFSBuild install
fi

if [ "$(lfspkg -S 5 sqlite)" = "false" ];then
	cd /LFSPkgBuildScripts/sys/sqlite/
	./sqlite.LFSBuild install
fi

if [ "$(lfspkg -S 5 libpng)" = "false" ];then
	cd /LFSPkgBuildScripts/libs/libpng/
	./libpng.LFSBuild install
fi

if [ "$(lfspkg -S 5 pcre)" = "false" ];then
	cd /LFSPkgBuildScripts/libs/pcre/
	./pcre.LFSBuild install
fi

if [ "$(lfspkg -S 5 jasper)" = "false" ];then
	cd /LFSPkgBuildScripts/libs/jasper/
	./jasper.LFSBuild install
fi

if [ "$(lfspkg -S 5 git)" = "false" ];then
	cd /LFSPkgBuildScripts/devel/git/
	./git.LFSBuild install
fi

if [ "$(lfspkg -S 5 SDL)" = "false" ];then
	cd /LFSPkgBuildScripts/mm/SDL/
	./SDL.LFSBuild install
fi

if [ "$(lfspkg -S 5 SDL-image)" = "false" ];then
	cd /LFSPkgBuildScripts/mm/SDL-image/
	./SDL-image.LFSBuild install
fi

if [ "$(lfspkg -S 5 freetype)" = "false" ];then
	cd /LFSPkgBuildScripts/libs/freetype/
	./freetype.LFSBuild install
fi

if [ "$(lfspkg -S 5 fribidi)" = "false" ];then
	export OPTIONS="--with-glib=no"
	cd /LFSPkgBuildScripts/sys/fribidi/
	./fribidi.LFSBuild install
	unset OPTIONS
fi

if [ "$(lfspkg -S 5 nasm)" = "false" ];then
	cd /LFSPkgBuildScripts/devel/nasm/
	./nasm.LFSBuild install
fi

if [ "$(lfspkg -S 5 libcdio)" = "false" ];then
	cd /LFSPkgBuildScripts/mm/libcdio/
	./libcdio.LFSBuild install
fi

if [ "$(lfspkg -S 5 taglib)" = "false" ];then
	cd /LFSPkgBuildScripts/mm/taglib/
	./taglib.LFSBuild install
fi

if [ "$(lfspkg -S 5 libmodplug)" = "false" ];then
	cd /LFSPkgBuildScripts/mm/libmodplug/
	./libmodplug.LFSBuild install
fi

if [ "$(lfspkg -S 5 yajl)" = "false" ];then
	cd /LFSPkgBuildScripts/libs/yajl/
	./yajl.LFSBuild install
fi

if [ "$(lfspkg -S 5 tinyxml)" = "false" ];then
	cd /LFSPkgBuildScripts/libs/tinyxml/
	./tinyxml.LFSBuild install
fi

if [ "$(lfspkg -S 5 lzo)" = "false" ];then
	cd /LFSPkgBuildScripts/libs/lzo/
	./lzo.LFSBuild install
fi

if [ "$(lfspkg -S 5 giflib)" = "false" ];then
	cd /LFSPkgBuildScripts/libs/giflib/
	./giflib.LFSBuild install
fi

if [ "$(lfspkg -S 5 libjpeg-turbo)" = "false" ];then
	cd /LFSPkgBuildScripts/libs/libjpeg-turbo
	./libjpeg-turbo.LFSBuild install
fi

if [ "$(lfspkg -S 5 Python)" = "false" ];then
	cd /LFSPkgBuildScripts/python/Python/
	./Python.LFSBuild install
fi

if [ "$(lfspkg -S 5 mariadb)" = "false" ];then
	cd /LFSPkgBuildScripts/admin/mariadb/
	./mariadb.LFSBuild install
fi

if [ "$(lfspkg -S 5 libxml2)" = "false" ];then
	cd /LFSPkgBuildScripts/libs/libxml2/
	./libxml2.LFSBuild install
fi
		 
if [ "$(lfspkg -S 5 libxslt)" = "false" ];then
	cd /LFSPkgBuildScripts/libs/libxslt/
	./libxslt.LFSBuild install
fi

if [ "$(lfspkg -S 5 libtirpc)" = "false" ];then
	cd /LFSPkgBuildScripts/libs/libtirpc/
	./libtirpc.LFSBuild install
fi

if [ "$(lfspkg -S 5 samba)" = "false" ];then
	export OPTIONS="--without-ldap"
	cd /LFSPkgBuildScripts/net/samba/
	./samba.LFSBuild install
	unset OPTIONS
fi

if [ "$(lfspkg -S 5 alsa-lib)" = "false" ];then
	cd /LFSPkgBuildScripts/mm/alsa-lib/
	./alsa-lib.LFSBuild install
fi

if [ "$(lfspkg -S 5 libass)" = "false" ];then
	export OPTIONS="--disable-fontconfig --disable-require-system-font-provider"
	cd /LFSPkgBuildScripts/mm/libass/
	./libass.LFSBuild install
	unset OPTIONS
fi

if [ "$(lfspkg -S 5 BinaryJDK)" = "false" ];then
	cd /LFSPkgBuildScripts/devel/binaryjdk/
	./binaryjdk.LFSBuild install
fi

if [ "$(lfspkg -S 5 swig)" = "false" ];then
	cd /LFSPkgBuildScripts/devel/swig/
	./swig.LFSBuild install
fi

if [ "$(lfspkg -S 5 fbset)" = "false" ];then
	cd /LFSPkgBuildScripts/sys/fbset/
	./fbset.LFSBuild install
fi

if [ "$(lfspkg -S 5 openssh)" = "false" ];then
	cd /LFSPkgBuildScripts/sys/openssh/
	./openssh.LFSBuild install
fi

if [ "$(lfspkg -S 5 glib)" = "false" ];then
	cd /LFSPkgBuildScripts/libs/glib/
	./glib.LFSBuild install
fi

if [ "$(lfspkg -S 5 udevil)" = "false" ];then
	cd /LFSPkgBuildScripts/sys/udevil/
	./udevil.LFSBuild install
fi

if [ "$(lfspkg -S 5 dialog)" = "false" ];then
	cd /LFSPkgBuildScripts/devel/dialog/
	./dialog.LFSBuild install
fi

if [ "$(lfspkg -S 5 pi-kodi-krypton)" = "false" ];then
	cd /LFSPkgBuildScripts/mm/kodi/
	./pi-kodi-krypton.LFSBuild install
fi
