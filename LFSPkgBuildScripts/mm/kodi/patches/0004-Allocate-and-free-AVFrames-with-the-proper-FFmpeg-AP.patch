From 9859bc8a9704b226411f0ed1eb73983afdc63378 Mon Sep 17 00:00:00 2001
From: Andreas Cadhalpun <andreas.cadhalpun@googlemail.com>
Date: Mon, 31 Oct 2016 10:56:12 +0100
Subject: [PATCH] Allocate and free AVFrames with the proper FFmpeg API

---
 xbmc/cores/VideoPlayer/DVDDemuxers/DVDDemuxFFmpeg.cpp         | 11 +++--------
 .../VideoPlayer/VideoRenderers/HwDecRender/MMALRenderer.cpp   |  7 ++++---
 2 files changed, 7 insertions(+), 11 deletions(-)

--- a/xbmc/cores/VideoPlayer/DVDDemuxers/DVDDemuxFFmpeg.cpp
+++ b/xbmc/cores/VideoPlayer/DVDDemuxers/DVDDemuxFFmpeg.cpp
@@ -1922,16 +1922,11 @@
     st->codec->skip_loop_filter = AVDISCARD_ALL;
 
     // We are looking for an IDR frame
-    AVFrame picture;
-    memset(&picture, 0, sizeof(AVFrame));
-    picture.pts = picture.pkt_dts = picture.pkt_pts = picture.best_effort_timestamp = AV_NOPTS_VALUE;
-    picture.pkt_pos = -1;
-    picture.key_frame = 1;
-    picture.format = -1;
+    AVFrame *picture = av_frame_alloc();
 
     int got_picture = 0;
-    avcodec_decode_video2(st->codec, &picture, &got_picture, pkt);
-    av_frame_unref(&picture);
+    avcodec_decode_video2(st->codec, picture, &got_picture, pkt);
+    av_frame_free(&picture);
   }
 }
 
--- a/xbmc/cores/VideoPlayer/VideoRenderers/HwDecRender/MMALRenderer.cpp
+++ b/xbmc/cores/VideoPlayer/VideoRenderers/HwDecRender/MMALRenderer.cpp
@@ -170,7 +170,7 @@
   if (!avctx)
     return;
   int w = width, h = height;
-  AVFrame picture;
+  AVFrame *picture = av_frame_alloc();
   int unaligned;
   int stride_align[AV_NUM_DATA_POINTERS];
 
@@ -182,16 +182,17 @@
   do {
     // NOTE: do not align linesizes individually, this breaks e.g. assumptions
     // that linesize[0] == 2*linesize[1] in the MPEG-encoder for 4:2:2
-    av_image_fill_linesizes(picture.linesize, avctx->pix_fmt, w);
+    av_image_fill_linesizes(picture->linesize, avctx->pix_fmt, w);
     // increase alignment of w for next try (rhs gives the lowest bit set in w)
     w += w & ~(w - 1);
 
     unaligned = 0;
     for (int i = 0; i < 4; i++)
-      unaligned |= picture.linesize[i] % stride_align[i];
+      unaligned |= picture->linesize[i] % stride_align[i];
   } while (unaligned);
   width = w;
   height = h;
+  av_frame_free(&picture);
 }
 
 CMMALBuffer *CMMALPool::GetBuffer(uint32_t timeout)
