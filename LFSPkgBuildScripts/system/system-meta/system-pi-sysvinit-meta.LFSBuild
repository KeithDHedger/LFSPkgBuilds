#!/bin/bash

. /usr/share/LFSPkg/LFSFunctions

export NOCHANGEUSER=1
export CHECKETC=0
export CONFIGOPTIONS="--prefix=/usr --disable-debug --disable-nls"
THISTTY=$(tty)
export THISTTY
export LFSVERSION
export BUILDSCRIPTS
export OUTPUT
export SOURCEARCHIVES
export PKGARCHIVES
export COMPILEAT
export SCRIPTLOG
export MAKEFLAGS
export NOLOADCONFIG=1
export ANYVERSION=1

DEPENDS="pi-linuxheaders-4.19
Man-pages-5.02
Glibc-2.30
Zlib-1.2.11
File-5.37
Readline-8.0
M4-1.4.18
Bc-2.1.3
Binutils-2.32
GMP-6.1.2
MPFR-4.0.2
MPC-1.1.0
Shadow-4.7
GCC-9.2.0
Bzip2-1.0.8
Pkg-config-0.29.2
Ncurses-6.1
attr-2.4.48
acl-2.2.53
libcap-2.27
Sed-4.7
Psmisc-23.2
Iana-Etc-2.30
Bison-3.4.1
Flex-2.6.4
Grep-3.3
Bash-5.0
Libtool-2.4.6
GDBM-1.18.1
gperf-3.1
Expat-2.2.7
Inetutils-1.9.4
Perl-5.30.0
XML-Parser-2.44
intltool-0.51.0
Autoconf-2.69
Automake-1.16.1
xz-5.2.4
Kmod-26
Gettext-0.20.1
Libelf-0.177
Libffi-3.2.1
OpenSSL-1.1.1
python3-3.7.4
Ninja-1.9.0
Meson-0.51.1
Coreutils-8.31
Check-0.12.0
Diffutils-3.7
Gawk-5.0.1
Findutils-4.6.0
Groff-1.22.4
Less-551
Gzip-1.10
IPRoute2-5.2.0
Kbd-2.2.0
Libpipeline-1.5.1
Make-4.2.1
Patch-2.7.6
Man-DB-2.8.6.1
Tar-1.32
Texinfo-6.6
Vim-8.1.1846
Procps-ng-3.3.15
Util-linux-2.34
E2fsprogs-1.45.3
Sysklogd-1.5.1
Sysvinit-2.95
Wget-1.20.3
unzip-6.0
lfs-bootscripts-20190524
eudev-3.2.8
Wget-1.20.3
unzip-6.0
GPM-1.20.7
ntp-4.2.8
openssh-8.0
Links-2.19
pilfs-bootscripts-20190902"

if ! lfspkg -B "$DEPENDS";then
	exit 100
fi

PKGNAME="system-meta"
VERSION="9.0"
BUILD=${BUILD:-1}
SECTION="SYSTEM"
SUFFIX="LFSPKG"
#Set this to your blank boot partition, if NOT set boot files are not copied.
PIBOOTDEV="/dev/mmcblk0p8"
PIROOTDEV="/dev/mmcblk0p9"
ROOTFSTYPE="ext2"
KERNELVERSION="4.19.y"

PKG="${OUTPUT}/${PKGNAME}"
DOWHAT=${1:-"build"}
CWD=$(pwd)

rm -rf "$PKG" || true
mkdir -p "$PKG"

pushd $COMPILEAT 2>/dev/null||true
	mkdir -vp ${PKG}/opt ${PKG}/etc/ld.so.conf.d ${PKG}/lib/firmware
	tar -xvf ${SOURCEARCHIVES}/${SECTION}/firmware-$KERNELVERSION.tar.xz
	cp -rv firmware-master/hardfp/opt/vc ${PKG}/opt
	echo "/opt/vc/lib" >> ${PKG}/etc/ld.so.conf.d/broadcom.conf
	cp -rv firmware-master/modules ${PKG}/lib

	pushd ${PKG}/lib/firmware
		tar --strip-components=1 -xvf ${SOURCEARCHIVES}/${SECTION}/firmware-RPI-blobs.tar.gz
	popd

	if [ "X$PIBOOTDEV" != "X" ];then
		mkdir /boot||true
#make sure /boot is mounted
		mount $PIBOOTDEV /boot ||true
		cp -rv firmware-master/boot/ /
		echo "dwc_otg.lpm_enable=0 console=serial0,115200 console=tty1 root=$PIROOTDEV rootfstype=$ROOTFSTYPE elevator=deadline fsck.repair=yes rootwait" >/boot/cmdline.txt
		cp ${CWD}/config.txt /boot
	fi

	pushd "${BUILDSCRIPTS}/HelperScripts"
		./InstallService-NoDialog "ntpd sshd gpm"
	popd

	mkdir -vp $PKG/lib/udev/rules.d
	cp $CWD/10-local-rpi.rules $CWD/60-persistent-input.rules $PKG/lib/udev/rules.d

	checketc "$PKG"
	packageclean "$PKG" "$CWD"

	pushd "$PKG"
		lfspkg -n "$PKGNAME" -p "$VERSION" -d $SECTION -b $BUILD -s $SUFFIX -m
	popd

	case $DOWHAT in
		up*)
			lfspkg "^${PKGNAME}-[0-9][0-9]*" "${PKGARCHIVES}/${SECTION}/${PKGNAME}-${VERSION}-${BUILD}_${SECTION}_${SUFFIX}.tar.gz" -u
			;;
		"install")
			lfspkg "${PKGARCHIVES}/${SECTION}/${PKGNAME}-${VERSION}-${BUILD}_${SECTION}_${SUFFIX}.tar.gz" -i
			;;
		"build")
			echo "Just built"
			;;
		*)
			echo "*** Unknown command ***"
			exit 1
	esac

	rm -rf "$PKG" firmware-master
popd 2>/dev/null||true

