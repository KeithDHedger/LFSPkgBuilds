#!/bin/bash -e

. /usr/share/LFSPkg/LFSFunctions

trap 'echo -e "$0 ${RED}FAILED${NORMAL} at line ${GREEN}${LINENO}${NORMAL}"' ERR

. ../PkgVersions

PKGNAME="glibc"
TARNAME="$PKGNAME"
VERSION=$glibc_version
BUILD=${BUILD:-1}
SECTION="SYSTEM"
SUFFIX="LFSPKG"
TARBALL="${TARNAME}-${VERSION}.$glibc_arctype"
PKG="${OUTPUT}/${PKGNAME}"
DOWHAT=${1:-"build"}
CWD=$(pwd)

rm -rf "$PKG" || true
mkdir -p "$PKG"
scriptLog "${PKGNAME}-${VERSION}"

pushd $COMPILEAT 2>/dev/null||true
	extractarchive "${SOURCEARCHIVES}/${SECTION}/${TARBALL}"
	pushd "${TARNAME}-${VERSION}"
		patch -Np1 -i ${SOURCEARCHIVES}/${SECTION}/${TARNAME}-${VERSION}-fhs-1.patch
		patch -Np1 -i ${SOURCEARCHIVES}/${SECTION}/glibc-2.38-memalign_fix-1.patch
		sed '/width -=/s/workend - string/number_length/' -i stdio-common/vfprintf-process-arg.c
		mkdir -v build || true
		cd build
		echo "rootsbindir=/usr/sbin" > configparms
		CFLAGS="$LFSFLAGS" CXXFLAGS="$LFSFLAGS" ../configure $CONFIGOPTIONS --disable-werror --libdir=/usr/lib${LIBDIRSUFFIX} --enable-kernel=4.14 --enable-stack-protector=strong --with-headers=/usr/include libc_cv_slibdir=/lib${LIBDIRSUFFIX}
		make $MAKEFLAGS||make
		touch /etc/ld.so.conf
		sed '/test-installation/s@$(PERL)@echo not running@' -i ../Makefile
		make install DESTDIR="$PKG" || exit 100
		sed '/RTLDLIST=/s@/usr@@g' -i $PKG/usr/bin/ldd
		mkdir -p "$PKG/etc/"||true
		cp -v ../nscd/nscd.conf $PKG/etc/nscd.conf
		mkdir -pv $PKG/var/cache/nscd||true
		mkdir -pv $PKG/usr/lib/locale $PKG/lib${LIBDIRSUFFIX}||true
	popd

#Save an unstripped version of glibc for debugging ( valgrind for instance needs this )
	realldname=$(basename $(ls -1 ${PKG}/lib${LIBDIRSUFFIX}/ld-*))
	reallibcname=$(basename $(ls -1 ${PKG}/lib${LIBDIRSUFFIX}/libc.so*))
	mv ${PKG}/lib${LIBDIRSUFFIX}/ld-* ${PKG}/lib${LIBDIRSUFFIX}/ld-${VERSION}.so
	mv ${PKG}/lib${LIBDIRSUFFIX}/libc.so* ${PKG}/lib${LIBDIRSUFFIX}/libc-${VERSION}.so

	cp ${PKG}/lib${LIBDIRSUFFIX}/ld-${VERSION}.so /tmp/ld-${VERSION}.so.DEBUG
	cp ${PKG}/lib${LIBDIRSUFFIX}/libc-${VERSION}.so /tmp/libc-${VERSION}.so.DEBUG

	checketc "$PKG"
	packageclean "$PKG" "$CWD"

#Put back an unstripped version of glibc for debugging ( valgrind for instance needs this )
#To use the debug version just change the symlink  '/lib64/ld-linux-x86-64.so.2' to point to the debug version
#To use the debug version just change the symlink  '/lib64/libc.so.6' to point to the debug version
	mv /tmp/ld-${VERSION}.so.DEBUG ${PKG}/lib${LIBDIRSUFFIX}
	mv /tmp/libc-${VERSION}.so.DEBUG ${PKG}/lib${LIBDIRSUFFIX}
	pushd "${PKG}/lib${LIBDIRSUFFIX}"
		ln -sv ld-${VERSION}.so $realldname
		ln -sv libc-${VERSION}.so $reallibcname
	popd

	pushd "$PKG"
		lfspkg -n "$PKGNAME" -p "$VERSION" -d $SECTION -b $BUILD -s $SUFFIX -m
	popd

	case $DOWHAT in
		up*)
			lfspkg "^${PKGNAME}-[0-9][0-9]*" "${PKGARCHIVES}/${SECTION}/${PKGNAME}-${VERSION}-${BUILD}_${SECTION}_${SUFFIX}.tar.gz" -u
			;;
		 "install")
			lfspkg "${PKGARCHIVES}/${SECTION}/${PKGNAME}-${VERSION}-${BUILD}_${SECTION}_${SUFFIX}.tar.gz" -i
			;;
		"build")
			echo "Just built"
			;;
		*)
			echo "*** Unknown command ***"
			exit 1
	esac

	rm -r "$PKG" "${TARNAME}-${VERSION}"

	echo 'main(){}' > dummy.c
	cc dummy.c -v -Wl,--verbose &> dummy.log
	readelf -l a.out | grep ': /lib'
	grep -o '/usr/lib.*/crt[1in].*succeeded' dummy.log
	grep -B1 '^ /usr/include' dummy.log
	grep 'SEARCH.*/usr/lib' dummy.log |sed 's|; |\n|g'
	grep "/lib.*/libc.so.6 " dummy.log
	grep found dummy.log

	sleep 30
	#read -t 30 -p "check out " ||true
	rm -v dummy.c a.out dummy.log
popd 2>/dev/null||true

