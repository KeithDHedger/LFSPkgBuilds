#!/bin/bash -e

. /usr/share/LFSPkg/LFSFunctions

trap 'echo -e "$0 ${RED}FAILED${NORMAL} at line ${GREEN}${LINENO}${NORMAL}"' ERR

DEPENDS="SQLite-3.40.1 berkeley-db-5.3.28 valgrind-3.15.0 Tk-8.6.13"
if ! lfspkg -B "$DEPENDS";then
	exit 100
fi

PKGNAME="python3"
TARNAME="Python"
VERSION=3.11.2
BUILD=${BUILD:-1}
SECTION="SYSTEM-UPDGRADE"
SUFFIX="LFSPKG"
TARBALL="${TARNAME}-${VERSION}.tar.xz"
PKG="${OUTPUT}/${PKGNAME}"

DOWHAT=${1:-"build"}
rm -rf "$PKG" || true
mkdir -p "$PKG"
CWD=$(pwd)

scriptLog "${PKGNAME}-${VERSION}"
gettar "https://www.python.org/ftp/python/${VERSION}/${TARBALL}" $SECTION
gettar "https://www.python.org/ftp/python/doc/${VERSION}/python-${VERSION}-docs-html.tar.bz2" $SECTION
rm -rf "$PKG" || true
mkdir -p "$PKG"

pushd $COMPILEAT 2>/dev/null||true
	extractarchive "${SOURCEARCHIVES}/${SECTION}/${TARBALL}"
	pushd "${TARNAME}-${VERSION}"
#set path to g++/gcc ( cant use symlink! stupid python! )
		export CXX=${CXX:-$(readlink -e "$(which g++)")}
		export CC=${CC:-$(readlink -e "$(which gcc)")}
		LDFLAGS=" -lgcov --coverage " CFLAGS="$LFSFLAGS" CXXFLAGS="$LFSFLAGS" ./configure --prefix=/usr --with-ensurepip=yes --enable-shared --with-system-expat --with-system-ffi -with-dbmliborder=bdb:gdbm:ndbm --enable-optimizations

		make $MAKEFLAGS||make|| exit 100
		make install DESTDIR=$PKG || exit 100
		install -v -dm755 $PKG/usr/share/doc/${PKGNAME}-${VERSION}/html
		tar --strip-components=1 --no-same-owner --no-same-permissions -C $PKG/usr/share/doc/${PKGNAME}-${VERSION}/html -xvf ${SOURCEARCHIVES}/${SECTION}/python-${VERSION}-docs-html.tar.bz2
		ln -sv python3 $PKG/usr/bin/python
		unset CXX
		unset CC
	popd

	checketc $PKG
	packageclean "$PKG" "$CWD"

	pushd "$PKG"
		lfspkg -n "$PKGNAME" -p "$VERSION" -d $SECTION -b $BUILD -s $SUFFIX -m
	popd

	case $DOWHAT in
		up*)
			lfspkg "^${PKGNAME}-[0-9][0-9]*" "${PKGARCHIVES}/${SECTION}/${PKGNAME}-${VERSION}-${BUILD}_${SECTION}_${SUFFIX}.tar.gz" -u
			;;
		"install")
			lfspkg "${PKGARCHIVES}/${SECTION}/${PKGNAME}-${VERSION}-${BUILD}_${SECTION}_${SUFFIX}.tar.gz" -i
			;;
		"build")
			echo "Just built"
			;;
		*)
			echo "*** Unknown command ***"
			exit 1
	esac

	rm -r "$PKG" "${TARNAME}-${VERSION}"
popd 2>/dev/null||true

echo -e "${RED}WARNING!WARNING!WARNING!${NORMAL}"
echo -e "${RED}You MAY need to reinstall some pkgs that install python modules${NORMAL}"
echo -e "${RED}See also https://www.linuxfromscratch.org/blfs/view/stable/general/python3.html${NORMAL}"
echo -e "${RED}Upgrade at your own peril.${NORMAL}"
echo -e "${BLUE}Depending on the version and what modules have been installed you MAY want to do an install rather than an upgrade.${NORMAL}"
